<% layout('layouts/boilerplate')%>
<link rel="stylesheet" href="/stylesheets/stars.css" />
<!-- https://github.com/LunarLogic/starability -->

<div class="row container-fluid mt-5 mx-auto">
  <div class="col-12 col-sm-6">
    <div id="destinationCarousel" class="carousel slide">
      <div class="carousel-inner">
        <% destination.images.forEach((img, i)=> { %>
        <div class="carousel-item <%= i === 0 ? 'active' : ''%>">
          <img src="<%= img.url%>" class="d-block w-100" alt="" />
        </div>
        <% }) %>
      </div>
      <% if(destination.images.length> 1) {%>
      <button
        class="carousel-control-prev"
        type="button"
        data-bs-target="#destinationCarousel"
        data-bs-slide="prev"
      >
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button
        class="carousel-control-next"
        type="button"
        data-bs-target="#destinationCarousel"
        data-bs-slide="next"
      >
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
      <% } %>
    </div>

    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title"><%= destination.title%></h5>
        <p class="card-text"><%= destination.description%></p>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item text-muted"><%= destination.location%></li>
        <li class="list-group-item">
          Submitted by <%= destination.author.username %>
        </li>
        <li class="list-group-item">Rs. <%= destination.price%>/day/person</li>
      </ul>
      <% if( currentUser && destination.author.equals(currentUser._id)) {%>
      <div class="card-body">
        <a
          class="card-link btn btn-info"
          href="/destinations/<%=destination._id%>/editForm"
          >Edit</a
        >
        <form
          class="d-inline"
          action="/destinations/<%=destination._id%>?_method=DELETE"
          method="POST"
        >
          <button class="btn btn-danger">Delete</button>
        </form>
      </div>
      <% } %>
      <div class="card-footer text-muted">
        <%- dayjs(lastUpdated).fromNow() %>
      </div>
    </div>
  </div>
  <div class="col-12 col-sm-6">
    <div id="map" class="text-black"></div>
    <% if(currentUser){ %>
    <h2>Leave a Review</h2>
    <form
      action="/destinations/<%=destination._id%>/reviews"
      method="POST"
      class="mb-3 validated-form"
      novalidate
    >
      <fieldset class="starability-basic">
        <input
          type="radio"
          id="no-rate"
          class="input-no-rate"
          name="review[rating]"
          value="1"
          checked
          aria-label="No rating."
        />
        <input type="radio" id="first-rate1" name="review[rating]" value="1" />
        <label for="first-rate1" title="Terrible">1 star</label>
        <input type="radio" id="first-rate2" name="review[rating]" value="2" />
        <label for="first-rate2" title="Not good">2 stars</label>
        <input type="radio" id="first-rate3" name="review[rating]" value="3" />
        <label for="first-rate3" title="Average">3 stars</label>
        <input type="radio" id="first-rate4" name="review[rating]" value="4" />
        <label for="first-rate4" title="Very good">4 stars</label>
        <input type="radio" id="first-rate5" name="review[rating]" value="5" />
        <label for="first-rate5" title="Amazing">5 stars</label>
      </fieldset>
      <div class="mb-3">
        <label class="form-label" for="body">Review Text</label>
        <textarea
          class="form-control"
          name="review[body]"
          id="body"
          cols="30"
          rows="3"
          required
        ></textarea>
        <div class="valid-feedback">Looks good!</div>
      </div>
      <button class="btn btn-success">Submit</button>
    </form>
    <% } %> <% for(let review of destination.reviews) { %>
    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title"><%= review.author.username%></h5>
        <!-- Below <p> element is from starability with some customisation -->
        <p class="starability-result" data-rating="<%=review.rating%>">
          <%= review.rating %> stars
        </p>
        <!-- <h6 class="card-subtitle mb-2 text-muted">By <%= review.author.username%></h6> -->
        <p class="card-text"><%= review.body %></p>
        <p class="text-muted">
          Last updated: <%- dayjs(review.updatedAt).fromNow() %>
        </p>
        <% if( currentUser && review.author.equals(currentUser._id)) {%>
        <div class="d-flex">
          <form
            action="/destinations/<%=destination._id%>/reviews/<%=review._id%>/edit"
            method="GET"
            class="d-inline me-2"
          >
            <button class="btn btn-sm btn-primary">Edit</button>
          </form>
          <form
            action="/destinations/<%=destination._id%>/reviews/<%=review._id%>?_method=DELETE"
            method="POST"
          >
            <button class="btn btn-sm btn-danger">Delete</button>
          </form>
        </div>
        <% } %>
      </div>
    </div>
    <% } %>
  </div>
</div>

<script>
  const mapToken = '<%- process.env.MAPBOX_TOKEN %>';
  const destination = { features: <%- JSON.stringify(destination) %>};
</script>
<script src="/javascripts/showPageMap.js"></script>

<!-- Behaviour of ejs and browser -->
<!-- We have extracted the js code (which is responsible for including the map) to public/javascripts/showPageMap  -->
<!-- ejs runs the template and finds all the ejs sntax and converts them to html. That is the major purpose of ejs. But ejs does not do that with scripts. -->
<!-- Scripts are taken care by the browser. But when the browser loads the script, it will not know whats "process.env mean" as process belongs to node.js environment and not to the browser. -->
<!-- So we are specifically keeping the "process.env.MAPBOX_TOKEN" within this file and moved the rest to a separate file -->
<!-- Technically we can call this is as handing data from server side to the client side -->

<!-- Usage of parse and stringify -->
<!-- <%- destination %> directly outputs the raw, unescaped content of the destination object as is, without converting it into a valid JavaScript expression or string. Since destination is a JavaScript object in your server-side code (Node.js), inserting it directly into the client-side script results in invalid JavaScript syntax, causing a syntax error. -->
<!--  Characters such as single quotes, double quotes, line breaks, and other special characters inside destination's properties can cause issues. -->
<!-- For an example, "It's a beautiful place" will result into 'It's a beautiful place' -->
<!-- JSON.parse() function is used to convert a JSON-encoded string into a JavaScript object.  -->
