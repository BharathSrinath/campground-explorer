<% layout('layouts/boilerplate')%>
<link rel="stylesheet" href="/stylesheets/stars.css" />
<!-- https://github.com/LunarLogic/starability -->

<div class="row">
  <div class="col-6">
    <div id="map" style="width: 400px; height: 300px"></div>
    <div id="campgroundCarousel" class="carousel slide">
      <div class="carousel-inner">
        <% campground.images.forEach((img, i)=> { %>
        <div class="carousel-item <%= i === 0 ? 'active' : ''%>">
          <img src="<%= img.url%>" class="d-block w-100" alt="" />
        </div>
        <% }) %>
      </div>
      <% if(campground.images.length> 1) {%>
      <button
        class="carousel-control-prev"
        type="button"
        data-bs-target="#campgroundCarousel"
        data-bs-slide="prev"
      >
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>
      <button
        class="carousel-control-next"
        type="button"
        data-bs-target="#campgroundCarousel"
        data-bs-slide="next"
      >
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
      <% } %>
    </div>

    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title"><%= campground.title%></h5>
        <p class="card-text"><%= campground.description%></p>
      </div>
      <ul class="list-group list-group-flush">
        <li class="list-group-item text-muted"><%= campground.location%></li>
        <li class="list-group-item">
          Submitted by <%= campground.author.username%>
        </li>
        <li class="list-group-item">$<%= campground.price%>/night</li>
      </ul>
      <% if( currentUser && campground.author.equals(currentUser._id)) {%>
      <!-- first we are checking whether currentUser exists (that is whether the user has logged-in) and then checking whether the user who is looking at the campground is the author of the campground. If so, only to them the edit and delete button will be visible.  -->
      <div class="card-body">
        <a
          class="card-link btn btn-info"
          href="/campgrounds/<%=campground._id%>/edit"
          >Edit</a
        >
        <form
          class="d-inline"
          action="/campgrounds/<%=campground._id%>?_method=DELETE"
          method="POST"
        >
          <button class="btn btn-danger">Delete</button>
        </form>
      </div>
      <% } %>
      <div class="card-footer text-muted">2 days ago</div>
    </div>
  </div>
  <div class="col-6">
    <% if(currentUser){ %>
    <!-- We will display the review form (to enter a review), only when the user is logged-in -->
    <h2>Leave a Review</h2>
    <form
      action="/campgrounds/<%=campground._id%>/reviews"
      method="POST"
      class="mb-3 validated-form"
      novalidate
    >
      <!-- commenting out the slider -->
      <!-- <div class="mb-3">
                <label class="form-label" for="rating">Rating</label>
                <input class="form-range" type="range" min="1" max="5" name="review[rating]" id="rating">
            </div> -->
      <!-- below code is from starability and we have customised the name field -  -->
      <!-- We are not using entity for stars due to accessibility -->
      <fieldset class="starability-basic">
        <input
          type="radio"
          id="no-rate"
          class="input-no-rate"
          name="review[rating]"
          value="1"
          checked
          aria-label="No rating."
        />
        <input type="radio" id="first-rate1" name="review[rating]" value="1" />
        <label for="first-rate1" title="Terrible">1 star</label>
        <input type="radio" id="first-rate2" name="review[rating]" value="2" />
        <label for="first-rate2" title="Not good">2 stars</label>
        <input type="radio" id="first-rate3" name="review[rating]" value="3" />
        <label for="first-rate3" title="Average">3 stars</label>
        <input type="radio" id="first-rate4" name="review[rating]" value="4" />
        <label for="first-rate4" title="Very good">4 stars</label>
        <input type="radio" id="first-rate5" name="review[rating]" value="5" />
        <label for="first-rate5" title="Amazing">5 stars</label>
      </fieldset>
      <div class="mb-3">
        <label class="form-label" for="body">Review Text</label>
        <textarea
          class="form-control"
          name="review[body]"
          id="body"
          cols="30"
          rows="3"
          required
        ></textarea>
        <div class="valid-feedback">Looks good!</div>
      </div>
      <button class="btn btn-success">Submit</button>
    </form>
    <% } %> <% for(let review of campground.reviews) { %>
    <div class="card mb-3">
      <div class="card-body">
        <h5 class="card-title"><%= review.author.username%></h5>
        <!-- Below <p> element is from starability with some customisation -->
        <p class="starability-result" data-rating="<%=review.rating%>">
          Rated: <%= review.rating %> stars
        </p>
        <!-- <h6 class="card-subtitle mb-2 text-muted">By <%= review.author.username%></h6> -->
        <p class="card-text">Review: <%= review.body %></p>
        <% if( currentUser && review.author.equals(currentUser._id)) {%>
        <form
          action="/campgrounds/<%=campground._id%>/reviews/<%=review._id%>?_method=DELETE"
          method="POST"
        >
          <button class="btn btn-sm btn-danger">Delete</button>
        </form>
        <% } %>
      </div>
    </div>
    <% } %>
  </div>
</div>

<% console.log(campground) %>

<script>
    const mapToken = '<%- process.env.MAPBOX_TOKEN %>';
    const campground = JSON.parse('<%- JSON.stringify(campground) %>');
</script>
<script src="/javascripts/showPageMap.js"></script>

<!-- Behaviour of ejs and browser -->
    <!-- We have extracted the js code (which is responsible for including the map) to public/javascripts/showPageMap  -->
    <!-- ejs runs the template and finds all the ejs sntax and converts them to html. That is the major purpose of ejs. But ejs does not do that with scripts. -->
    <!-- Scripts are taken care by the browser. But when the browser loads the script, it will not know whats "process.env mean" as process belongs to node.js environment and not to the browser. -->
    <!-- So we are specifically keeping the "process.env.MAPBOX_TOKEN" within this file and moved the rest to a separate file -->
    <!-- Technically we can call this is as handing data from server side to the client side -->

<!-- Usage of parse and stringify -->
    <!-- <%- campground %> directly outputs the raw, unescaped content of the campground object as is, without converting it into a valid JavaScript expression or string. Since campground is a JavaScript object in your server-side code (Node.js), inserting it directly into the client-side script results in invalid JavaScript syntax, causing a syntax error. -->
    <!--  Characters such as single quotes, double quotes, line breaks, and other special characters inside campground's properties can cause issues. -->
    <!-- For an example, "It's a beautiful place" will result into 'It's a beautiful place' -->
    <!-- JSON.parse() function is used to convert a JSON-encoded string into a JavaScript object.  -->